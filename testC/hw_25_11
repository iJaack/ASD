#include <stdio.h>  /* ora puoi usare NULL */

/* scrivi qui la definizione del tipo "elist" (elemento della lista) con i campi "info" (intero) e "next" (prossimo elemento) */
typedef struct elem {
int info;
struct elem *next;
} elist;
/* scrivi qui la definizione del tipo "plist" che e' un riferimento ad un oggetto di tipo "elist" */
typedef elist* plist;
/* puoi scrivere qui eventuali funzioni di supporto che vuoi utilizzare nella funzione compara_array_lista */

/* inizio funzione */

int compara_array_lista(int A[], int n, plist p){
       /* Scrivi qui il codice che conta quanti elementi dell'array A lungo n siano
       presenti anche nella lista semplicemente concatenata p di interi.
       L'array A ha tutti elementi distinti, mentre la lista p potrebbe avere elementi
       duplicati. Se un elemento di A appare duplicato in p, deve essere contato una sola volta.  
       Se la lista e' vuota oppure n e' zero allora ritorna zero.  */
  if(n=0 || p == NULL)
  	return 0;
  int i, elemCount = 0;
  plist tempP;
  for(i=0;i<n;i++) {
    tempP = p;
    while(tempP!=NULL) {
    	if(tempP->info == A[i]) {
      	elemCount++;
      	break;
    	}
    	tempP = tempP->next;
    }
  }
return elemCount;
}
